@model Cass.Bracket.Web.Models.Views.BracketVoteModel
@{
	ViewData["page"] = "vote";
}
<div class="page-container">
	<h1>{{bracket.Name}}</h1>
	<p class="description">{{bracket.Description}}</p>

	<div class="match" v-for="(m,i) in bracket.Matches" :key="m.Id">
		<h2>Match {{i+1}}</h2>
		<div class="opponents" v-for="(o,i) in m.Opponents" :key="o.Opponent.Id">
			<div class="opponent" :class="{'selected':m.Winner==o.Opponent.Id}" v-on:click="m.Winner = o.Opponent.Id">{{o.Opponent.Name}}</div>
		</div>
	</div>
	<button class="btn-cast" :disabled="!canCastVote" v-on:click="cast">cast your predictions</button>
	<div class="error" v-if="error">{{error}}</div>
</div>

<!--<div style="white-space:pre;">
	{{JSON.stringify(bracket,null,2)}}
</div>-->
@section Scripts {
	<script type="text/javascript">
		window.page = {
			model: {
				username:'@(Html.Raw(User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Email)?.Value?.ToJavascript()))',
				name: '@(Html.Raw(User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Name)?.Value?.ToJavascript()))',
				bracket: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model))
			}
		};
	</script>
	<script src="~/js/page.vote.js" asp-append-version="true"></script>
}